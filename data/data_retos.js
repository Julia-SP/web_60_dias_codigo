const data_retos = [
  {
    id: 1,
    numero: 1,
    nombre: 'Página de presentación',
    descripcion_corta:
      'Landing page atractiva y responsive que presente el reto, explica sus fases, y enlazalo a tus redes profesionales',
    explicacion_ejercicio:
      'Crea una landing page que sirva como tarjeta de visita online. Incluye tu nombre, una breve bio, motivaciones,fases del reto y enlaces a redes profesionales. Usa HTML, CSS Flex/Grid y media queries para que sea responsive para. Plus: Agrega animaciones suaves al hover en los botones.',
    lenguajes: ['HTML', 'CSS', 'JavaScript'],
    imagen: '/assets_retos/1.png',
    links: [
      'https://www.youtube.com/watch?v=m37Y2RznA-U',
      'https://www.youtube.com/watch?v=oYRda7UtuhA',
      '#',
      '#',
    ],
    consejos:
      'Los vídeos en los fondos son muy efectistas y no cuesta nada ponerlos. Puedes encontrar libres en Unplash o Freepik',
  },
  {
    id: 2,
    numero: 2,
    nombre: 'Calculadora básica',
    descripcion_corta: 'Calculadora funcional para operaciones básicas (suma, resta, mult., div.)',
    explicacion_ejercicio:
      'Construye una calculadora que realice operaciones básicas. Implementa un componente visual con botones, cálculo mediante eventos, control de errores como división por cero y reset.',
    lenguajes: ['HTML', 'CSS', 'JavaScript'],
    imagen: '/assets_retos/2.png',
    links: [
      'https://www.youtube.com/watch?v=I5kj-YsmWjM',
      'https://www.youtube.com/watch?v=b0_Yv-HomnE',
      'https://www.youtube.com/watch?v=LX8_z1nvqk4',
      '#',
    ],
    consejos: 'Diviértete haciendo la calculadora que siempre has querido',
  },
  {
    id: 3,
    numero: 3,
    nombre: 'Generador de color aleatorio',
    descripcion_corta: 'Genera y muestra un color aleatorio en pantalla con su código hexadecimal',
    explicacion_ejercicio:
      'Implementa un botón que genere un color hexadecimal aleatorio y lo aplique al fondo. Muestra el código y añade un botón para copiarlo al portapapeles.',
    lenguajes: ['HTML', 'CSS', 'JavaScript'],
    imagen: '/assets_retos/3.png',
    links: [
      'https://www.youtube.com/watch?v=HGTJBPNC-Gw',
      'https://www.youtube.com/watch?v=qz0aGYrrlhU',
      'https://www.pixartprinting.es/blog/rgb-definicion/?srsltid=AfmBOorZ81-t0sNctiCj-t2-9mdTwSP9Gb0_Wjae6ky_Yu4CrC2qOVNQ',
      '#',
    ],
    consejos:
      'No te quedes solo con los colores HEX e intenta añadir RGB, HSV y todas las que te puedan venir bien para tus proyectos ',
  },
  {
    id: 4,
    numero: 4,
    nombre: 'Conversor de divisas',
    descripcion_corta: 'Crea un conversor para todas las divisas del mundo con una API',
    explicacion_ejercicio:
      'Crea campos de cantidad y selects para monedas. utiliza la API gratuita ExChangeRate-API para conseguir todos los datos necesarios que necesitas',
    lenguajes: ['HTML', 'CSS', 'JavaScript'],
    imagen: '/assets_retos/4.png',
    links: ['https://www.youtube.com/watch?v=HGTJBPNC-Gw', 'https://www.exchangerate-api.com/', '#', '#'],
    consejos: 'Piensa en cómo sería el conversor más cómodo para ti, ahora hazlo',
  },
  {
    id: 5,
    numero: 5,
    nombre: 'Lista de tareas',
    descripcion_corta: 'App to-do que guarda tareas en localStorage y las recupera al recargar',
    explicacion_ejercicio:
      'Implementa añadir, marcar como completada y borrar tareas. Persiste el array en localStorage y recupéralo al recargar. Crea un contador de tareas pendientes.',
    lenguajes: ['HTML', 'CSS', 'JavaScript'],
    imagen: '/assets_retos/5.png',
    links: ['https://www.youtube.com/watch?v=kK_Wqx3RnHk', 'https://www.youtube.com/watch?v=-oP7JK_rXUI', 'https://www.youtube.com/watch?v=G0jO8kUrg-I', '#'],
    consejos:
      '',
  },
  {
    id: 6,
    numero: 6,
    nombre: 'Validación de formularios',
    descripcion_corta: 'Form con validaciones JS: email, contraseña, required',
    explicacion_ejercicio:
      'Crea un formulario con campos como email, password, nombre... Implementa validaciones por regex, mensajes de error y bloqueo de envío si hay errores. Resalta los campos inválidos.',
    lenguajes: ['HTML', 'CSS', 'JavaScript'],
    imagen: '/assets_retos/6.png',
    links: ['https://www.youtube.com/watch?v=rfscVS0vtbw', 'https://www.youtube.com/watch?v=EQrUGEvnCzY', 'https://www.youtube.com/watch?v=In0nB0ABaUk', '#'],
    consejos:
      'Busca buenas prácticas o ejemplos como los de Material Design si no sabes cómo representar gráficamente la muestra de errores, etc',
  },
  {
    id: 7,
    numero: 7,
    nombre: 'Piedra, papel o tijeras',
    descripcion_corta: 'Juego interactivo para jugar contra tu ordenador',
    explicacion_ejercicio:
      'Implementa botones para las opciones. Genera elección aleatoria para la máquina, muestra el resultado y lleva un marcador de ronda. Añade animaciones o efectos al fallo/éxito.',
    lenguajes: ['HTML', 'CSS', 'JavaScript'],
    imagen: '/assets_retos/7.png',
    links: ['https://www.youtube.com/watch?v=HGTJBPNC-Gw', '#', '#', '#'],
    consejos:
      'Guarda las opciones en un array; haz la lógica de ganador como función separada; reinicia marcador opcional. Se creativo hay muchas formas de hacerlo',
  },
  {
    id: 8,
    numero: 8,
    nombre: 'Galería de imágenes con filtro',
    descripcion_corta: 'Muestra varias imágenes con botones para filtrar categorías',
    explicacion_ejercicio:
      'Carga un array de imágenes con categorías. Genera dinamicamente las cards. Añade botones que filtren por categoría mostrando solo las correspondientes.',
    lenguajes: ['HTML', 'CSS', 'JavaScript'],
    imagen: '/assets_retos/8.png',
    links: ['https://www.youtube.com/watch?v=McPdzhLRzCg', '', '#', '#'],
    consejos:
      'Usa data-attributes para categorías; reutiliza la función de renderizado al cambiar filtro. Una idea, un selector de helados y qu puedas filtrar por sabor, ingredientes...',
  },
  {
    id: 9,
    numero: 9,
    nombre: 'Carrusel (slider)',
    descripcion_corta: 'Slider de imágenes con botones de anterior/siguiente',
    explicacion_ejercicio:
      'Crea un slider con flechas prev/next y paginación. Cambia la imagen actual con animación CSS/JS. Añade autoplay con pausa al hover.',
    lenguajes: ['HTML', 'CSS', 'JavaScript'],
    imagen: '/assets_retos/9.png',
    links: ['https://www.youtube.com/watch?v=McPdzhLRzCg', 'https://www.youtube.com/watch?v=SxklmLH6TE8', '#', '#'],
    consejos:
      'Utiliza position y transform; controla límites; implementa setInterval y clearInterval.',
  },
  {
    id: 10,
    numero: 10,
    nombre: 'Generador de contraseñas',
    descripcion_corta: 'Crea contraseñas seguras con opciones de longitud y tipos de caracteres',
    explicacion_ejercicio:
      'Permite elegir longitud y tipos de caracteres. Genera la contraseña aleatoria y opción para copiarla. Muestra nivel de seguridad según entropía.',
    lenguajes: ['HTML', 'CSS', 'JavaScript'],
    imagen: '/assets_retos/10.png',
    links: ['https://www.youtube.com/watch?v=HGTJBPNC-Gw', '#', '#', '#'],
    consejos: 'Include uppercase/lowercase/numbers/symbols según selección; usa Clipboard API por ejemplo.',
  },
  {
    id: 11,
    numero: 11,
    nombre: 'Progress Bar Animation',
    descripcion_corta: 'Barra que se llena dinámicamente al hacer click o scroll',
    explicacion_ejercicio:
      'Crea una barra que se llene según el progreso (click o scroll). Controla porcentaje y agrega animaciones CSS (ease, transitions), así como reset opcional.',
    lenguajes: ['HTML', 'CSS', 'JavaScript'],
    imagen: '/assets_retos/11.png',
    links: ['https://www.youtube.com/watch?v=FT6GENcUIxQ', '#', '#', '#'],
    consejos: 'Usa IntersectionObserver para scroll; easing smooth; reinicia con botón.',
  },
  {
    id: 12,
    numero: 12,
    nombre: 'Landing Page Clone',
    descripcion_corta: 'Replica una landing page popular (Bootstrap/Tailwind…)',
    explicacion_ejercicio:
      'Clona visualmente una landing existente, con navbar, secciones, footer, galería o testimonios. Asegura responsividad.',
    lenguajes: ['HTML', 'CSS', 'JavaScript'],
    imagen: '/assets_retos/12.png',
    links: ['https://www.youtube.com/watch?v=UB1O30fR-EE', '#', '#', '#'],
    consejos: 'Inspecciona CSS original; utiliza mobile‑first; optimiza imágenes y tipografías.',
  },
  {
    id: 13,
    numero: 13,
    nombre: 'App del clima (API)',
    descripcion_corta: 'Busca y muestra el clima actual usando una API',
    explicacion_ejercicio:
      'Usa OpenWeatherMap: pide clima por ciudad, muestra temperatura, icono, descripción, humedad, viento. Añade loader y manejo de errores.',
    lenguajes: ['HTML', 'CSS', 'JavaScript', 'API'],
    imagen: '/assets_retos/13.png',
    links: ['https://www.youtube.com/watch?v=GuA0_Z1llYU', '#', '#', '#'],
    consejos: 'Key en env; debounce en búsqueda; spinner mientras carga.',
  },
  {
    id: 14,
    numero: 14,
    nombre: 'Movie App (API)',
    descripcion_corta: 'Consulta películas usando una API y muestra detalles',
    explicacion_ejercicio:
      'Consume TMDB API: busca por nombre de película, muestra posters, título, rating, sinopsis y detalle en un modal o página.',
    lenguajes: ['HTML', 'CSS', 'JavaScript', 'API'],
    imagen: '/assets_retos/14.png',
    links: ['https://www.youtube.com/watch?v=3Xtuzow1vG4', '#', '#', '#'],
    consejos: 'Paginación, manejar errores, placeholders cargando.',
  },
  {
    id: 15,
    numero: 15,
    nombre: 'Pokedex (API)',
    descripcion_corta: 'Muestra datos de Pokémon usando PokéAPI',
    explicacion_ejercicio:
      'Consume PokéAPI: muestra lista de pokémons con imagen, nombre y tipo; admite paginación o buscador. Detalle al hacer click.',
    lenguajes: ['HTML', 'CSS', 'JavaScript', 'API'],
    imagen: '/assets_retos/15.png',
    links: ['https://www.youtube.com/watch?v=--eZgJG_yf0', '#', '#', '#'],
    consejos: 'Cache fs precargadas; usa lazy loading y paginación.',
  },
  {
    id: 16,
    numero: 16,
    nombre: 'Image Search (API)',
    descripcion_corta: 'Busca imágenes vía API (Unsplash, Pexels)',
    explicacion_ejercicio:
      'Usa Unsplash API para buscar imágenes. Muestra grilla responsive; añade carga más y lazy‑load.',
    lenguajes: ['HTML', 'CSS', 'JavaScript', 'API'],
    imagen: '/assets_retos/reto16.png',
    links: ['https://www.youtube.com/watch?v=KLlX7nMdNn8', '#', '#', '#'],
    consejos: 'Debounce en input; scroll infinito; spinner al final.',
  },
  {
    id: 17,
    numero: 17,
    nombre: 'News App (API)',
    descripcion_corta: 'Mostrar titulares de noticias usando API',
    explicacion_ejercicio:
      'Consume NewsAPI: selecciona categoría, muestra titulares, imagen y enlace. Agrega paginación.',
    lenguajes: ['HTML', 'CSS', 'JavaScript', 'API'],
    imagen: '/assets_retos/17.png',
    links: ['https://www.youtube.com/watch?v=9BoDEBT2E3Y', '#', '#', '#'],
    consejos: 'Debounce búsqueda; manejo key-rate-limit; placeholders.',
  },
  {
    id: 18,
    numero: 18,
    nombre: 'Random Quote Generator',
    descripcion_corta: 'Genera frases célebres desde una API',
    explicacion_ejercicio:
      'Usa API tipo Quotable: genera frases + autora al pulsar botón. Agrega animación fade y posibilidad de tweet.',
    lenguajes: ['HTML', 'CSS', 'JavaScript', 'API'],
    imagen: '/assets_retos/18.png',
    links: ['https://www.youtube.com/watch?v=FK7mz--_qcc', '#', '#', '#'],
    consejos: 'Fade entre citas; botón compartir en redes.',
  },
  {
    id: 19,
    numero: 19,
    nombre: 'Recipe Finder (API)',
    descripcion_corta: 'Busca recetas y muestra ingredientes e imágenes',
    explicacion_ejercicio:
      'Consume Edamam o Spoonacular: busca recetas, muestra imagen, ingredientes, tiempo. Modal detalle con instrucciones.',
    lenguajes: ['HTML', 'CSS', 'JavaScript', 'API'],
    imagen: '/assets_retos/19.png',
    links: ['https://www.youtube.com/watch?v=SQVa1bNClQU', '#', '#', '#'],
    consejos: 'Cachea respuestas; autocomplete en input.',
  },
  {
    id: 20,
    numero: 20,
    nombre: 'Trivia Game (API)',
    descripcion_corta: 'Juego de trivial usando preguntas de API',
    explicacion_ejercicio:
      'Usa Open Trivia DB: muestra pregunta y opciones mezcladas. Lleva puntuación, feedback y reinicio.',
    lenguajes: ['HTML', 'CSS', 'JavaScript', 'API'],
    imagen: '/assets_retos/20.png',
    links: ['https://www.youtube.com/watch?v=XB6UpuKBn14', '#', '#', '#'],
    consejos: 'Baraja opciones; timer opcional.',
  },
  {
    id: 21,
    numero: 21,
    nombre: 'QR Code Generator',
    descripcion_corta: 'Genera un código QR para el texto o URL ingresado',
    explicacion_ejercicio:
      'Usa QRCode.js: lector genera código, permite descargar o copiar. Valida entrada.',
    lenguajes: ['HTML', 'CSS', 'JavaScript'],
    imagen: '/assets_retos/21.png',
    links: ['https://www.youtube.com/watch?v=FhM-84T4vgE', '#', '#', '#'],
    consejos: 'Valida URL; descarga autom.',
  },
  {
    id: 22,
    numero: 22,
    nombre: 'E-commerce Product Page',
    descripcion_corta: 'Muestra producto con imagen, descripción, precio y variantes',
    explicacion_ejercicio:
      'Crea página con carousel de imágenes, selección de variante, precio dinámico, botón de añadir al carrito.',
    lenguajes: ['HTML', 'CSS', 'JavaScript'],
    imagen: '/assets_retos/22.png',
    links: ['https://www.youtube.com/watch?v=AfzS3oB2FT0', '#', '#', '#'],
    consejos: "Preload imágenes; feedback tras 'añadir al carro'.",
  },
  {
    id: 23,
    numero: 23,
    nombre: 'Chatbot (API)',
    descripcion_corta: 'Chatbot simple usando una API pública',
    explicacion_ejercicio:
      'Usa API tipo OpenAI o Bot libre: crea interfaz de chat, envía mensajes y muestra respuestas.',
    lenguajes: ['HTML', 'CSS', 'JavaScript', 'API'],
    imagen: '/assets_retos/23.png',
    links: ['https://www.youtube.com/watch?v=ZkVJLZWnpr4', '#', '#', '#'],
    consejos: 'Storage conversacional; minimizar peticiones.',
  },
  {
    id: 24,
    numero: 24,
    nombre: 'Google Translate Clone (API)',
    descripcion_corta: 'Traduce texto entre idiomas usando una API',
    explicacion_ejercicio:
      'Consume Google Translate o LibreTranslate API: textarea entrada/salida, select idioma, botón traducir.',
    lenguajes: ['HTML', 'CSS', 'JavaScript', 'API'],
    imagen: '/assets_retos/24.png',
    links: ['https://www.youtube.com/watch?v=8lat8ErHR_U', '#', '#', '#'],
    consejos: 'Throttle en peticiones; loading indicator.',
  },
  {
    id: 25,
    numero: 25,
    nombre: 'Crypto Tracker (API)',
    descripcion_corta: 'Muestra precios de criptos en tiempo real',
    explicacion_ejercicio:
      'Consulta CoinGecko API: muestra lista de criptos, precio, cambio %, con refresco automático.',
    lenguajes: ['HTML', 'CSS', 'JavaScript', 'API'],
    imagen: '/assets_retos/25.png',
    links: ['https://www.youtube.com/watch?v=nXh7mirHiMo', '#', '#', '#'],
    consejos: 'Actualiza cada minuto; ordena por precio o cambio.',
  },
  {
    id: 26,
    numero: 26,
    nombre: 'Dashboard interactivo (Chart.js)',
    descripcion_corta: 'Visualiza datos con gráficos dinámicos',
    explicacion_ejercicio:
      'Usa Chart.js: crea gráfico de barras, lineas o dona. Permite cambiar datos con botones.',
    lenguajes: ['HTML', 'CSS', 'JavaScript', 'Chart.js'],
    imagen: '/assets_retos/26.png',
    links: ['https://www.youtube.com/watch?v=sE08f4iuOhA', '#', '#', '#'],
    consejos: 'Actualiza datasets dinámicamente; tooltips custom.',
  },
  {
    id: 27,
    numero: 27,
    nombre: 'Auth con Firebase',
    descripcion_corta: 'Registro/login de usuarios con Firebase Authentication',
    explicacion_ejercicio:
      'Configura Firebase, crea formularios de registro y login. Maneja sesión y protegé rutas de usuario.',
    lenguajes: ['HTML', 'CSS', 'JavaScript', 'Firebase'],
    imagen: '/assets_retos/27.png',
    links: ['https://www.youtube.com/watch?v=PKwu15ldZ7k', '#', '#', '#'],
    consejos: 'Maneja errores posibles; limpiar inputs al enviar.',
  },
  {
    id: 28,
    numero: 28,
    nombre: 'Drag & Drop Task Manager',
    descripcion_corta: 'Organiza tarjetas moviéndolas entre columnas',
    explicacion_ejercicio:
      'Crea tableros con columnas y tareas. Usa API de Drag & Drop nativo para mover tarjetas.',
    lenguajes: ['HTML', 'CSS', 'JavaScript'],
    imagen: '/assets_retos/28.png',
    links: ['https://www.youtube.com/watch?v=w8cQpTOepeo', '#', '#', '#'],
    consejos: 'Guarda orden en localStorage; feedback visual durante drag.',
  },
  {
    id: 29,
    numero: 29,
    nombre: 'Animated Landing Page',
    descripcion_corta: 'Landing con animaciones e interactividad',
    explicacion_ejercicio:
      'Agrega animaciones (scroll, hover) con IntersectionObserver y CSS Animations. Incluye imágenes, efectos.',
    lenguajes: ['HTML', 'CSS', 'JavaScript'],
    imagen: '/assets_retos/29.png',
    links: ['https://www.youtube.com/watch?v=QilV5n-AJrk', '#', '#', '#'],
    consejos: 'Usa Animate.css o GSAP; discreción en animaciones.',
  },
  {
    id: 30,
    numero: 30,
    nombre: 'Task App con Firebase (CRUD)',
    descripcion_corta: 'App de tareas usando Firebase como base de datos',
    explicacion_ejercicio:
      'Registra tareas en Firestore: añade, edita, elimina y lista tareas en tiempo real.',
    lenguajes: ['HTML', 'CSS', 'JavaScript', 'Firebase'],
    imagen: '/assets_retos/30.png',
    links: ['https://www.youtube.com/watch?v=2Ehk6dQkAIE', '#', '#', '#'],
    consejos: 'Estructura datos por usuario; uso de onSnapshot.',
  },
  {
    id: 31,
    numero: 31,
    nombre: 'To-Do List (React)',
    descripcion_corta: 'Lista de tareas hecha con React',
    explicacion_ejercicio:
      'Crea componente ToDo con estado, inputs y botones. Permite marcar completadas y borrar.',
    lenguajes: ['React', 'CSS', 'JavaScript'],
    imagen: '/assets_retos/31.png',
    links: ['https://www.youtube.com/watch?v=hQAHSlTtcmY', '#', '#', '#'],
    consejos: 'Usa useState; componentes separados; keys únicas.',
  },
  {
    id: 32,
    numero: 32,
    nombre: 'Weather App (React + API)',
    descripcion_corta: 'App de clima en React consumiendo API',
    explicacion_ejercicio:
      'Crea componentes de entrada, vista de clima y loader. Fetch a OpenWeatherMap y muestra datos.',
    lenguajes: ['React', 'CSS', 'JavaScript', 'API'],
    imagen: '/assets_retos/32.png',
    links: ['https://www.youtube.com/watch?v=GuA0_Z1llYU', '#', '#', '#'],
    consejos: 'useEffect para fetch; estado loading y error.',
  },
  {
    id: 33,
    numero: 33,
    nombre: 'Movie Search App (React + API)',
    descripcion_corta: 'Busca y muestra películas en React.',
    explicacion_ejercicio:
      'Consulta TMDB en un componente React, muestra lista y permite ver detalles.',
    lenguajes: ['React', 'CSS', 'JavaScript', 'API'],
    imagen: '/assets_retos/reto33.png',
    links: ['https://www.youtube.com/watch?v=3Xtuzow1vG4', '#', '#', '#'],
    consejos: 'useEffect con dependencia de búsqueda; debounce.',
  },
  {
    id: 34,
    numero: 34,
    nombre: 'CRUD App (React + LocalStorage)',
    descripcion_corta: 'Operaciones CRUD en React, datos en LocalStorage',
    explicacion_ejercicio:
      'Permite crear, mostrar, editar y eliminar datos con React y persistencia local.',
    lenguajes: ['React', 'CSS', 'JavaScript'],
    imagen: '/assets_retos/34.png',
    links: ['https://www.youtube.com/watch?v=ZTh9QT27gVE', '#', '#', '#'],
    consejos: 'Custom hooks para storage; formularios controlados.',
  },
  {
    id: 35,
    numero: 35,
    nombre: 'Blog App (React + Firebase)',
    descripcion_corta: 'Gestión de posts con React y Firebase',
    explicacion_ejercicio:
      'CRUD posts: título, contenido, listado y detalle, usando Firebase como backend.',
    lenguajes: ['React', 'CSS', 'JavaScript', 'Firebase'],
    imagen: '/assets_retos/35.png',
    links: ['https://www.youtube.com/watch?v=PKku4l7n2Kw', '#', '#', '#'],
    consejos: 'Sube imágenes a Storage; estructura por usuario.',
  },
  {
    id: 36,
    numero: 36,
    nombre: 'Task Manager (React + Node.js)',
    descripcion_corta: 'Gestor de tareas con backend en Node',
    explicacion_ejercicio:
      'React frontend que consume API en Node.js para crear tareas, listarlas y eliminarlas.',
    lenguajes: ['React', 'Node.js', 'Express', 'CSS'],
    imagen: '/assets_retos/36.png',
    links: ['https://www.youtube.com/watch?v=Sb9g2VlXUn0', '#', '#', '#'],
    consejos: 'Cors, routes bien estructuradas, axios.',
  },
  {
    id: 37,
    numero: 37,
    nombre: 'JWT Auth (Node + React)',
    descripcion_corta: 'Autenticación con JSON Web Tokens',
    explicacion_ejercicio:
      'Backend en Node: registro/login con JWT; frontend React: forms, protected routes, token en localStorage.',
    lenguajes: ['React', 'Node.js', 'Express', 'JWT'],
    imagen: '/assets_retos/37.png',
    links: ['https://www.youtube.com/watch?v=7nafaH9SddU', '#', '#', '#'],
    consejos: 'bcrypt para hashing; refresh tokens opcional.',
  },
  {
    id: 38,
    numero: 38,
    nombre: 'Real-time Chat (WebSockets + Node.js)',
    descripcion_corta: 'Chat en tiempo real con websockets',
    explicacion_ejercicio:
      'Backend con Socket.io, frontend conectado, mensajes emitidos y recibidos en tiempo real.',
    lenguajes: ['JavaScript', 'Node.js', 'Socket.io'],
    imagen: '/assets_retos/38.png',
    links: ['https://www.youtube.com/watch?v=vQjiN8Qgs3c', '#', '#', '#'],
    consejos: 'Room option; mostrar usuarios conectados.',
  },
  {
    id: 39,
    numero: 39,
    nombre: 'E-commerce Store (React + API)',
    descripcion_corta: 'Tienda online con React y backend (mock)',
    explicacion_ejercicio:
      'Muestra lista de productos, detalles y carrito (solo UI/backend simulado).',
    lenguajes: ['React', 'CSS', 'JavaScript'],
    imagen: '/assets_retos/39.png',
    links: ['https://www.youtube.com/watch?v=Ke90Tje7VS0', '#', '#', '#'],
    consejos: 'Context API para estado global; localStorage carrito.',
  },
  {
    id: 40,
    numero: 40,
    nombre: 'Stripe Payment Integration',
    descripcion_corta: 'Implementa pago con Stripe en tu proyecto web',
    explicacion_ejercicio:
      'Integra Stripe Checkout/Elements con backend en Node y frontend en React o JS.',
    lenguajes: ['JavaScript', 'Node.js', 'React', 'Stripe API'],
    imagen: '/assets_retos/40.png',
    links: ['https://www.youtube.com/watch?v=QKTFrDmxFSY', '#', '#', '#'],
    consejos: 'Entorno seguro (HTTPS), webhooks para validación.',
  },
  {
    id: 41,
    numero: 41,
    nombre: 'Redux Contador (React + Redux)',
    descripcion_corta: 'Global state management con Redux en React',
    explicacion_ejercicio:
      'Configura redux store, actions, reducers; integra con React usando hooks redux.',
    lenguajes: ['React', 'Redux', 'JavaScript', 'CSS'],
    imagen: '/assets_retos/41.png',
    links: ['https://www.youtube.com/watch?v=CVpUuw9XSjY', '#', '#', '#'],
    consejos: 'Manten reducers puros; usar redux-devtools.',
  },
  {
    id: 42,
    numero: 42,
    nombre: 'Admin Dashboard (React + API)',
    descripcion_corta: 'Panel de administración con gráficos y tablas',
    explicacion_ejercicio:
      'Crea dashboard con Chart.js o Recharts: muestra gráficos de datos fetch, tablas paginadas.',
    lenguajes: ['React', 'JavaScript', 'Chart.js', 'CSS'],
    imagen: '/assets_retos/42.png',
    links: ['https://www.youtube.com/watch?v=8SbUC-UaR14', '#', '#', '#'],
    consejos: 'Componentes reutilizables; responsive en tablas.',
  },
  {
    id: 43,
    numero: 43,
    nombre: 'Clone Twitter UI (React)',
    descripcion_corta: 'Interfaz tipo Twitter con React y CSS',
    explicacion_ejercicio:
      'Reproduce el UI: feeds, tweets, sidebar y navbar. No hace falta backend.',
    lenguajes: ['React', 'CSS'],
    imagen: '/assets_retos/43.png',
    links: ['https://www.youtube.com/watch?v=C6LLR3K5j14', '#', '#', '#'],
    consejos: 'Flexbox/ Grid para layout; tarjetas reutilizables.',
  },
  {
    id: 44,
    numero: 44,
    nombre: 'Spotify Clone (React + API)',
    descripcion_corta: 'Muestra música de una API como Spotify',
    explicacion_ejercicio:
      'Usa Spotify API: lista playlists o tracks, muestra portada, artist, play button dummy.',
    lenguajes: ['React', 'JavaScript', 'API'],
    imagen: '/assets_retos/44.png',
    links: ['https://www.youtube.com/watch?v=V0DRZZ85_k8', '#', '#', '#'],
    consejos: 'Maneja token OAuth; loaders.',
  },
  {
    id: 45,
    numero: 45,
    nombre: 'Full-stack CRUD (React + Node)',
    descripcion_corta: 'App completa con creación, lectura, actualización y borrado.',
    explicacion_ejercicio:
      'Backend Node/Express con endpoints CRUD, frontend React que consuma API y muestre formulario y tablas.',
    lenguajes: ['React', 'Node.js', 'Express', 'CSS'],
    imagen: '/assets_retos/45.png',
    links: ['https://www.youtube.com/watch?v=EMfFdv1wos4', '#', '#', '#'],
    consejos: 'Organiza rutas REST; manejo de errores.',
  },
  {
    id: 46,
    numero: 46,
    nombre: 'REST API (Node.js + Express)',
    descripcion_corta: 'Desarrolla una API REST completa',
    explicacion_ejercicio:
      'Crea rutas GET, POST, PUT, DELETE para recurso (por ejemplo, productos). Usa middleware, validación y MongoDB o array.',
    lenguajes: ['Node.js', 'Express', 'JavaScript'],
    imagen: '/assets_retos/46.png',
    links: ['https://www.youtube.com/watch?v=Oe421EPjeBE', '#', '#', '#'],
    consejos: 'Usa router modular; middleware de error.',
  },
  {
    id: 47,
    numero: 47,
    nombre: 'React + REST API',
    descripcion_corta: 'Frontend en React consumiendo tu propia API',
    explicacion_ejercicio:
      'Consume la API del reto anterior: lista items, crea items, borra, edita. Usa axios o fetch y estado. ',
    lenguajes: ['React', 'JavaScript', 'CSS'],
    imagen: '/assets_retos/47.png',
    links: ['https://www.youtube.com/watch?v=wgMtPikKHQA', '#', '#', '#'],
    consejos: 'CORS habilitado en backend; manejar el estado tras acciones.',
  },
  {
    id: 48,
    numero: 48,
    nombre: 'Forum App (React + Node + DB)',
    descripcion_corta: 'Foro de discusión con backend y frontend',
    explicacion_ejercicio:
      'Modelo usuarios/post: backend con CRUD de topics y mensajes. Frontend con creación y listados.',
    lenguajes: ['React', 'Node.js', 'Express', 'MongoDB'],
    imagen: '/assets_retos/48.png',
    links: ['https://www.youtube.com/watch?v=BtXNvGVCUns', '#', '#', '#'],
    consejos: 'Populate de referencias; paginación.',
  },
  {
    id: 49,
    numero: 49,
    nombre: 'Redux en proyecto',
    descripcion_corta: 'Añade Redux a una app existente',
    explicacion_ejercicio:
      'Integra Redux en una app React que ya existe (ej. e‑commerce o blog). Refactor estado global.',
    lenguajes: ['React', 'Redux', 'JavaScript'],
    imagen: '/assets_retos/49.png',
    links: ['https://www.youtube.com/watch?v=CVpUuw9XSjY', '#', '#', '#'],
    consejos: 'Normaliza el estado; usa combineReducers.',
  },
  {
    id: 50,
    numero: 50,
    nombre: 'Trello Clone (Drag & Drop)',
    descripcion_corta: 'Tablero drag & drop tipo Trello con React',
    explicacion_ejercicio:
      'Crea columnas y tarjetas que puedan moverse entre columnas con react-beautiful-dnd o nativo.',
    lenguajes: ['React', 'JavaScript', 'CSS'],
    imagen: '/assets_retos/50.png',
    links: ['https://www.youtube.com/watch?v=ihoorV6kQIE', '#', '#', '#'],
    consejos: 'Usa react-beautiful-dnd; guarda estado en localStorage.',
  },
  {
    id: 51,
    numero: 51,
    nombre: 'Real‑time Chat App (React + Firebase)',
    descripcion_corta: 'Chat completo en tiempo real usando Firebase',
    explicacion_ejercicio:
      'Autenticación con Firebase Auth, mensajes guardados en Firestore, chat en tiempo real con UI actualizada.',
    lenguajes: ['React', 'Firebase', 'JavaScript', 'CSS'],
    imagen: '/assets_retos/51.png',
    links: ['https://www.youtube.com/watch?v=zQyrwxMPm88', '#', '#', '#'],
    consejos: 'Levas un montón de proyectos, enhorabuena.',
  },
  {
    id: 52,
    numero: 52,
    nombre: 'OAuth Login (Google/GitHub)',
    descripcion_corta: 'Iniciar sesión usando terceros (OAuth)',
    explicacion_ejercicio:
      'Implementa login con Google/GitHub usando Firebase Auth o Passport.js. Maneja redirecciones y tokens.',
    lenguajes: ['JavaScript', 'Firebase', 'Node.js', 'React'],
    imagen: '/assets_retos/52.png',
    links: ['https://www.youtube.com/watch?v=KQIQbZKZg', '#', '#', '#'],
    consejos: 'Revisa configuración OAuth en consola dev.; manejo de errors UI.',
  },
  {
    id: 53,
    numero: 53,
    nombre: 'Multi-Role User Dashboard',
    descripcion_corta: 'Dashboard con roles de usuario (admin y user)',
    explicacion_ejercicio:
      'Define roles; protege rutas; muestra diferentes vistas según rol (admin verá más opciones que user).',
    lenguajes: ['React', 'Node.js', 'Express', 'JWT'],
    imagen: '/assets_retos/53.png',
    links: ['#', '#', '#', '#'],
    consejos: 'Middleware de auth; pruebas con distintos tokens.',
  },
  {
    id: 54,
    numero: 54,
    nombre: 'WebSockets en proyecto',
    descripcion_corta: 'Agrega actualizaciones en tiempo real a una app',
    explicacion_ejercicio:
      'Añade funcionalidad push (nuevos datos, notificaciones) usando Socket.io entre Node.js y frontend.',
    lenguajes: ['JavaScript', 'Node.js', 'Socket.io', 'React'],
    imagen: '/assets_retos/54.png',
    links: ['https://www.youtube.com/watch?v=vQjiN8Qgs3c', '#', '#', '#'],
    consejos: 'Usa rooms; desconexión limpia.',
  },
  {
    id: 55,
    numero: 55,
    nombre: 'E-commerce Cart (React + Redux + Node)',
    descripcion_corta: 'Carrito de compras con backend, React y Redux',
    explicacion_ejercicio:
      'Añade productos al carrito; guarda estado global con Redux; backend con sessions o en DB; confirma órdenes.',
    lenguajes: ['React', 'Redux', 'Node.js', 'Express'],
    imagen: '/assets_retos/55.png',
    links: ['#', '#', '#', '#'],
    consejos: 'Normalized state; total price recalculado al cambiar cantidad.',
  },
  {
    id: 56,
    numero: 56,
    nombre: 'Netflix Clone (React + API)',
    descripcion_corta: 'Interfaz tipo Netflix con React y consumo de API',
    explicacion_ejercicio:
      'Consume API de películas; muestra secciones como Trending, Top Rated; carruseles con slick o swiper.',
    lenguajes: ['React', 'JavaScript', 'API', 'CSS'],
    imagen: '/assets_retos/56.png',
    links: ['#', '#', '#', '#'],
    consejos: 'Optimiza carga de imágenes; paginar secciones.',
  },
  {
    id: 57,
    numero: 57,
    nombre: 'Sales App (Node.js + MongoDB)',
    descripcion_corta: 'Gestión de ventas, productos y clientes',
    explicacion_ejercicio:
      'Backend con rutas para ventas/productos/clientes en MongoDB; frontend para ver crear y listar ventas.',
    lenguajes: ['Node.js', 'Express', 'MongoDB', 'JavaScript'],
    imagen: '/assets_retos/57.png',
    links: ['#', '#', '#', '#'],
    consejos: 'Populate en Mongoose; validar datos con JOI.',
  },
  {
    id: 58,
    numero: 58,
    nombre: 'Event Calendar App',
    descripcion_corta: 'Calendario de eventos con React y backend',
    explicacion_ejercicio:
      'Frontend con calendario interactivo, backend CRUD para eventos. Permite añadir/editar eventos.',
    lenguajes: ['React', 'Node.js', 'MongoDB'],
    imagen: '/assets_retos/58.png',
    links: ['#', '#', '#', '#'],
    consejos: 'Moment.js o date-fns para manejo fechas; validación de solapamientos.',
  },
  {
    id: 59,
    numero: 59,
    nombre: 'Online Course Platform',
    descripcion_corta: 'Plataforma de cursos con gestión de contenido',
    explicacion_ejercicio:
      'Frontend curso catálogo, detalles, login; backend con contenido de curso, progreso por usuario.',
    lenguajes: ['React', 'Node.js', 'MongoDB', 'JavaScript'],
    imagen: '/assets_retos/59.png',
    links: ['#', '#', '#', '#'],
    consejos: 'Protege rutas; divide contenido por módulos.',
  },
  {
    id: 60,
    numero: 60,
    nombre: 'Final Project Showcase',
    descripcion_corta: 'Proyecto completo full-stack: despliegue y portfolio',
    explicacion_ejercicio:
      'Desarrolla un proyecto que combine frontend (React o JS), backend, base de datos, autenticación y despliegue (Heroku/Netlify). Añade README y portafolio.',
    lenguajes: ['React', 'Node.js', 'MongoDB', 'CSS', 'JavaScript'],
    imagen: '/assets_retos/60.png',
    links: ['#', '#', '#', '#'],
    consejos: 'Documenta tu proyecto; usa variables de entorno; test básico; despliegue y CI.',
  },
];

export default data_retos;